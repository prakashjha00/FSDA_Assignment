create or replace table sales_data_final 
( order_id varchar(50),
order_date date primary key,
ship_date date,
ship_mode varchar(50),
customer_name varchar (50),
segment varchar(50),
state varchar(50),
country varchar(50),
market varchar(50),
region varchar(50),
product_id varchar(50),
category varchar(50),
sub_category varchar(50),
product_name varchar(255),
sales number,
quantity number,
discount number(10,6),
profit number(10,6),
shipping_cost number(20,6),
order_priority varchar(50),
year varchar(5));


-- 1 .SET PRIMARY KEY.
alter table sales_data_final
drop primary key;

alter table sales_data_final
Add primary key (order_id);

-- 2. CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE. 
â€“ Date datatype

-- 3. EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.


select substringindex(ORDER_ID,'-',10)  as order_extract from sales_data_final;

-- 4.  FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID. 
update   sales_data_final set dicount_flag = (case when  discount>0 then 'Yes'
else 'False'
end);

-- 5. FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.
select DATEDIFF(day,ORDER_DATE,ship_date) from sales_data_final;

-- 6. . FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.

select 
DATEDIFF(day,ORDER_DATE,ship_date) as process_day,
case 
when process_day <=3 then 5
when process_day >3 and process_day <=6 then 4
when process_day >6 and process_day<=10 then 3
Else 2
end Rating, *
from sales_data_final;

